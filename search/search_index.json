{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo ao Relat\u00f3rio T\u00e9cnico sobre React","text":"<p>Este \u00e9 o relat\u00f3rio t\u00e9cnico desenvolvido como parte da disciplina de Programa\u00e7\u00e3o Web. Aqui, voc\u00ea encontrar\u00e1 uma documenta\u00e7\u00e3o detalhada sobre a tecnologia React, abrangendo desde a introdu\u00e7\u00e3o b\u00e1sica at\u00e9 boas pr\u00e1ticas e recursos adicionais.</p>"},{"location":"#sumario","title":"Sum\u00e1rio","text":"<ul> <li>Introdu\u00e7\u00e3o ao React</li> <li>O que \u00e9 React?</li> <li>Hist\u00f3ria e evolu\u00e7\u00e3o</li> <li> <p>Por que usar React?</p> </li> <li> <p>Configura\u00e7\u00e3o do Ambiente</p> </li> <li>Requisitos</li> <li>Instalando Node.js e npm</li> <li> <p>Criando um projeto React com Create React App</p> </li> <li> <p>Componentes</p> </li> <li>Componentes funcionais e de classe</li> <li>Props e State</li> <li> <p>Ciclo de vida dos componentes</p> </li> <li> <p>JSX</p> </li> <li>O que \u00e9 JSX?</li> <li>Sintaxe b\u00e1sica</li> <li> <p>Inserindo express\u00f5es em JSX</p> </li> <li> <p>Gerenciamento de Estado</p> </li> <li>Estado</li> <li> <p>Ciclo de Vida dos Componentes</p> </li> <li> <p>Efeitos Colaterais</p> </li> <li>useEffect Hook</li> <li> <p>Exemplos de uso</p> </li> <li> <p>Roteamento</p> </li> <li>React Router</li> <li>Configura\u00e7\u00e3o b\u00e1sica</li> <li> <p>Roteamento din\u00e2mico</p> </li> <li> <p>Formul\u00e1rios</p> </li> <li>Manipula\u00e7\u00e3o de formul\u00e1rios</li> <li> <p>Valida\u00e7\u00e3o de formul\u00e1rios</p> </li> <li> <p>Gerenciamento de Dados</p> </li> <li>Fetch API e Axios</li> <li> <p>Consumindo APIs REST</p> </li> <li> <p>Boas Pr\u00e1ticas</p> </li> <li>Estrutura de diret\u00f3rios</li> <li>Conven\u00e7\u00f5es de c\u00f3digo</li> <li> <p>Testes em React</p> </li> <li> <p>Recursos Adicionais</p> </li> <li>Bibliotecas e ferramentas populares</li> <li>Comunidade e suporte</li> </ul>"},{"location":"#sobre","title":"Sobre","text":"<p>Este relat\u00f3rio foi elaborado como um recurso para aprender e dominar React, uma das bibliotecas de JavaScript mais populares para constru\u00e7\u00e3o de interfaces de usu\u00e1rio. A documenta\u00e7\u00e3o inclui exemplos de c\u00f3digo e pr\u00e1ticas recomendadas para ajudar a criar aplica\u00e7\u00f5es React de alta qualidade.</p> <p>Esperamos que voc\u00ea encontre este material \u00fatil e que ele o ajude em seus projetos com React. Se tiver alguma d\u00favida ou sugest\u00e3o, sinta-se \u00e0 vontade para contribuir ou entrar em contato.</p>"},{"location":"#contribuidores","title":"Contribuidores","text":"<p>Este relat\u00f3rio foi desenvolvido por:</p> <ul> <li>Thomas Anderson Lopes</li> <li>Tulio Oliveira Cruz</li> <li>Lucas Neves Saber Gabriel </li> </ul> <p>Para qualquer d\u00favida ou sugest\u00e3o, por favor, abra uma issue no reposit\u00f3rio GitHub.</p>"},{"location":"#documentacao-oficial","title":"Documenta\u00e7\u00e3o Oficial","text":"<p>Para mais detalhes, consulte a documenta\u00e7\u00e3o oficial do React.</p>"},{"location":"boas_praticas/","title":"Boas Pr\u00e1ticas","text":""},{"location":"boas_praticas/#estrutura-de-diretorios","title":"Estrutura de Diret\u00f3rios","text":"<p>Organizar seu projeto de forma clara e l\u00f3gica \u00e9 fundamental para a manuten\u00e7\u00e3o a longo prazo. Uma estrutura de diret\u00f3rios recomendada para um projeto React pode ser assim:</p> <pre><code>my-app/\n\u251c\u2500\u2500 public/\n\u2502 \u251c\u2500\u2500 index.html\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 src/\n\u2502 \u251c\u2500\u2500 assets/\n\u2502 \u251c\u2500\u2500 components/\n\u2502 \u251c\u2500\u2500 pages/\n\u2502 \u251c\u2500\u2500 styles/\n\u2502 \u251c\u2500\u2500 App.js\n\u2502 \u251c\u2500\u2500 index.js\n\u2502 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 README.md\n</code></pre> <ul> <li><code>assets/</code>: Arquivos est\u00e1ticos como imagens e fontes.</li> <li><code>components/</code>: Componentes reutiliz\u00e1veis.</li> <li><code>pages/</code>: Componentes de p\u00e1gina ou layouts.</li> <li><code>styles/</code>: Arquivos CSS ou SASS.</li> </ul>"},{"location":"boas_praticas/#convencoes-de-codigo","title":"Conven\u00e7\u00f5es de C\u00f3digo","text":"<p>Seguir conven\u00e7\u00f5es de c\u00f3digo consistentes facilita a leitura e manuten\u00e7\u00e3o do c\u00f3digo.</p>"},{"location":"boas_praticas/#nomeacao-de-componentes","title":"Nomea\u00e7\u00e3o de Componentes","text":"<ul> <li>Use <code>PascalCase</code> para nomear componentes.</li> <li>Use <code>camelCase</code> para nomear vari\u00e1veis e fun\u00e7\u00f5es.</li> </ul>"},{"location":"boas_praticas/#exemplos-de-nomeacao","title":"Exemplos de Nomea\u00e7\u00e3o","text":"<pre><code>import React from 'react';\n\n// Componente\nfunction MyComponent() {\n  // Vari\u00e1vel\n  const myVariable = 'Hello';\n\n  // Fun\u00e7\u00e3o\n  function handleClick() {\n    console.log('Clicked!');\n  }\n\n  return (\n    &lt;div onClick={handleClick}&gt;\n      {myVariable}\n    &lt;/div&gt;\n  );\n}\n\nexport default MyComponent;\n</code></pre>"},{"location":"boas_praticas/#testes-em-react","title":"Testes em React","text":"<p>Escrever testes \u00e9 essencial para garantir que sua aplica\u00e7\u00e3o funcione como esperado e para prevenir regress\u00f5es.</p>"},{"location":"boas_praticas/#jest-e-react-testing-library","title":"Jest e React Testing Library","text":"<p>Jest e React Testing Library s\u00e3o ferramentas populares para testar componentes React. Primeiro, instale as depend\u00eancias:</p> <pre><code>npm install --save-dev jest @testing-library/react\n</code></pre>"},{"location":"boas_praticas/#exemplo-de-teste-de-componente","title":"Exemplo de Teste de Componente","text":"<p>MyComponent.js</p> <pre><code>import React from 'react';\n\nfunction MyComponent() {\n  return &lt;div&gt;Hello, World!&lt;/div&gt;;\n}\n\nexport default MyComponent;\n</code></pre> <p>MyComponent.test.js</p> <pre><code>import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport MyComponent from './MyComponent';\n\ntest('renders Hello, World!', () =&gt; {\n  render(&lt;MyComponent /&gt;);\n  const linkElement = screen.getByText(/Hello, World!/i);\n  expect(linkElement).toBeInTheDocument();\n});\n</code></pre>"},{"location":"boas_praticas/#executando-testes","title":"Executando Testes","text":"<p>Para executar seus testes, adicione o seguinte script no seu <code>package.json</code>:</p> <pre><code>\"scripts\": {\n\"test\": \"jest\"\n}\n</code></pre> <p>Agora, voc\u00ea pode executar seus testes com o comando:</p>"},{"location":"componentes/","title":"Componentes","text":""},{"location":"componentes/#componentes-funcionais-e-de-classe","title":"Componentes Funcionais e de Classe","text":"<p>Em React, os componentes podem ser definidos como funcionais ou de classe.</p>"},{"location":"componentes/#componentes-funcionais","title":"Componentes Funcionais","text":"<p>Os componentes funcionais s\u00e3o fun\u00e7\u00f5es JavaScript que retornam elementos React. Eles s\u00e3o simples e mais f\u00e1ceis de escrever e entender.</p>"},{"location":"componentes/#exemplo-de-componente-funcional","title":"Exemplo de Componente Funcional","text":"<pre><code>import React from 'react';\nfunction Welcome(props) {\nreturn &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;\n}\nexport default Welcome;\n</code></pre>"},{"location":"componentes/#componentes-de-classe","title":"Componentes de Classe","text":"<p>Os componentes de classe s\u00e3o definidos como classes ES6 e t\u00eam mais funcionalidades, como m\u00e9todos de ciclo de vida.</p>"},{"location":"componentes/#exemplo-de-componente-de-classe","title":"Exemplo de Componente de Classe","text":"<pre><code>import React, { Component } from 'react';\nclass Welcome extends Component {\nrender() {\nreturn &lt;h1&gt;Hello, {this.props.name}&lt;/h1&gt;;\n}\n}\nexport default Welcome;\n</code></pre>"},{"location":"componentes/#props-e-state","title":"Props e State","text":""},{"location":"componentes/#props","title":"Props","text":"<p>Props s\u00e3o entradas para os componentes React. Eles s\u00e3o passados de um componente pai para um componente filho e s\u00e3o imut\u00e1veis.</p>"},{"location":"componentes/#exemplo-de-uso-de-props","title":"Exemplo de Uso de Props","text":"<pre><code>import React from 'react';\nfunction Welcome(props) {\nreturn &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;\n}\nfunction App() {\nreturn &lt;Welcome name=\"Sara\" /&gt;;\n}\nexport default App;\n</code></pre>"},{"location":"componentes/#state","title":"State","text":"<p>State \u00e9 um objeto privado gerenciado dentro de um componente. Ele pode mudar ao longo do tempo, geralmente em resposta a a\u00e7\u00f5es do usu\u00e1rio.</p>"},{"location":"componentes/#_1","title":"Componentes","text":"<pre><code>import React, { useState } from 'react';\nfunction Counter() {\nconst [count, setCount] = useState(0);\nreturn (\n&lt;div&gt;\n&lt;p&gt;You clicked {count} times&lt;/p&gt;\n&lt;button onClick={() =&gt; setCount(count + 1)}&gt;\nClick me\n&lt;/button&gt;\n&lt;/div&gt;\n);\n}\nexport default Counter;\n</code></pre>"},{"location":"componentes/#ciclo-de-vida-dos-componentes","title":"Ciclo de Vida dos Componentes","text":"<p>Os componentes de classe possuem m\u00e9todos de ciclo de vida que permitem executar c\u00f3digo em pontos espec\u00edficos do ciclo de vida de um componente.</p>"},{"location":"componentes/#principais-metodos-de-ciclo-de-vida","title":"Principais M\u00e9todos de Ciclo de Vida","text":"<ul> <li>componentDidMount(): Chamado uma vez ap\u00f3s a montagem do componente.</li> <li>componentDidUpdate(prevProps, prevState): Chamado ap\u00f3s a atualiza\u00e7\u00e3o do componente.</li> <li>componentWillUnmount(): Chamado antes do componente ser desmontado e destru\u00eddo.</li> </ul>"},{"location":"componentes/#exemplo-de-uso-de-metodos-de-ciclo-de-vida","title":"Exemplo de Uso de M\u00e9todos de Ciclo de Vida","text":"<pre><code>import React, { Component } from 'react';\nclass Timer extends Component {\nconstructor(props) {\nsuper(props);\nthis.state = { seconds: 0 };\n}\ntick() {\nthis.setState(state =&gt; ({\nseconds: state.seconds + 1\n}));\n}\ncomponentDidMount() {\nthis.interval = setInterval(() =&gt; this.tick(), 1000);\n}\ncomponentDidUpdate() {\nconsole.log('Component updated');\n}\ncomponentWillUnmount() {\nclearInterval(this.interval);\n}\nrender() {\nreturn (\n&lt;div&gt;\nSeconds: {this.state.seconds}\n&lt;/div&gt;\n);\n}\n}\nexport default Timer;\n</code></pre>"},{"location":"configuracao_ambiente/","title":"Configura\u00e7\u00e3o do Ambiente","text":""},{"location":"configuracao_ambiente/#requisitos","title":"Requisitos","text":"<p>Para come\u00e7ar a desenvolver com React, voc\u00ea precisar\u00e1 do seguinte: - Node.js e npm instalados em sua m\u00e1quina.</p>"},{"location":"configuracao_ambiente/#instalando-nodejs-e-npm","title":"Instalando Node.js e npm","text":"<p>Voc\u00ea pode baixar e instalar o Node.js a partir do site oficial nodejs.org. A instala\u00e7\u00e3o do Node.js inclui o npm (Node Package Manager).</p>"},{"location":"configuracao_ambiente/#instalacao-no-windows","title":"Instala\u00e7\u00e3o no Windows","text":"<ol> <li>Baixe o instalador do Node.js a partir do site oficial.</li> <li>Execute o instalador e siga as instru\u00e7\u00f5es na tela.</li> <li> <p>Verifique a instala\u00e7\u00e3o abrindo o terminal e executando:</p> <pre><code>node -v\nnpm -v\n</code></pre> </li> </ol>"},{"location":"configuracao_ambiente/#instalacao-no-macos","title":"Instala\u00e7\u00e3o no macOS","text":"<ol> <li>Voc\u00ea pode instalar o Node.js usando um gerenciador de pacotes como Homebrew. Se voc\u00ea n\u00e3o tem o Homebrew instalado, pode instal\u00e1-lo seguindo as instru\u00e7\u00f5es no site do Homebrew.</li> <li> <p>Ap\u00f3s instalar o Homebrew, execute:</p> <pre><code>brew install node\n</code></pre> </li> <li> <p>Verifique a instala\u00e7\u00e3o executando:</p> <pre><code>node -v\nnpm -v\n</code></pre> </li> </ol>"},{"location":"configuracao_ambiente/#instalacao-no-linux","title":"Instala\u00e7\u00e3o no Linux","text":"<ol> <li> <p>Para distribui\u00e7\u00f5es baseadas em Debian, como Ubuntu, execute:</p> <pre><code>sudo apt update\nsudo apt install nodejs npm\n</code></pre> </li> <li> <p>Verifique a instala\u00e7\u00e3o executando:</p> <pre><code>node -v\nnpm -v\n</code></pre> </li> </ol>"},{"location":"configuracao_ambiente/#criando-um-projeto-react-com-create-react-app","title":"Criando um Projeto React com Create React App","text":"<p>O Create React App \u00e9 uma ferramenta oficial para criar projetos React. Ele configura um ambiente de desenvolvimento com as configura\u00e7\u00f5es necess\u00e1rias e ferramentas modernas.</p>"},{"location":"configuracao_ambiente/#criando-o-projeto","title":"Criando o Projeto","text":"<p>Para criar um novo projeto, execute o seguinte comando no terminal:</p> <pre><code>npx create-react-app my-app\ncd my-app\nnpm start\n</code></pre> <p>Isso criar\u00e1 um novo projeto React e iniciar\u00e1 o servidor de desenvolvimento. Voc\u00ea ver\u00e1 a aplica\u00e7\u00e3o padr\u00e3o do React rodando em http://localhost:3000.</p>"},{"location":"configuracao_ambiente/#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<p>Ap\u00f3s criar o projeto, voc\u00ea ver\u00e1 a seguinte estrutura de diret\u00f3rios:</p> <pre><code>my-app/\n\u251c\u2500\u2500 node_modules/\n\u251c\u2500\u2500 public/\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 App.css\n\u2502   \u251c\u2500\u2500 App.js\n\u2502   \u251c\u2500\u2500 App.test.js\n\u2502   \u251c\u2500\u2500 index.css\n\u2502   \u251c\u2500\u2500 index.js\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 ...\n</code></pre> <ul> <li>public/: Cont\u00e9m o arquivo index.html e outros ativos p\u00fablicos.</li> <li>src/: Cont\u00e9m os arquivos de c\u00f3digo-fonte do React.</li> <li>node_modules/: Cont\u00e9m as depend\u00eancias do projeto.</li> <li>.gitignore: Lista de arquivos e diret\u00f3rios a serem ignorados pelo Git.</li> <li>package.json: Arquivo de configura\u00e7\u00e3o que lista as depend\u00eancias e scripts do projeto.</li> </ul> <p>Agora voc\u00ea est\u00e1 pronto para come\u00e7ar a desenvolver com React!</p>"},{"location":"efeitos_colaterais/","title":"Efeitos Colaterais","text":""},{"location":"efeitos_colaterais/#o-que-sao-efeitos-colaterais","title":"O que s\u00e3o Efeitos Colaterais?","text":"<p>Efeitos colaterais s\u00e3o opera\u00e7\u00f5es que afetam algo fora do escopo da fun\u00e7\u00e3o atual. Em React, opera\u00e7\u00f5es como buscar dados de uma API, manipular diretamente o DOM, ou configurar um timer s\u00e3o consideradas efeitos colaterais.</p>"},{"location":"efeitos_colaterais/#o-hook-useeffect","title":"O Hook <code>useEffect</code>","text":"<p>O hook <code>useEffect</code> \u00e9 usado para lidar com efeitos colaterais em componentes funcionais. Ele combina o comportamento dos m\u00e9todos de ciclo de vida <code>componentDidMount</code>, <code>componentDidUpdate</code> e <code>componentWillUnmount</code>.</p>"},{"location":"efeitos_colaterais/#sintaxe-basica-do-useeffect","title":"Sintaxe B\u00e1sica do <code>useEffect</code>","text":"<pre><code>import React, { useEffect } from 'react';\n\nfunction ExampleComponent() {\n  useEffect(() =&gt; {\n    // C\u00f3digo para efeito colateral aqui\n  });\n\n  return &lt;div&gt;Example&lt;/div&gt;;\n}\n</code></pre>"},{"location":"efeitos_colaterais/#executando-efeitos-colaterais-condicionalmente","title":"Executando Efeitos Colaterais Condicionalmente","text":"<p>Voc\u00ea pode passar uma array de depend\u00eancias como segundo argumento para <code>useEffect</code> para controlar quando o efeito deve ser executado. Se uma das depend\u00eancias mudar, o efeito ser\u00e1 executado novamente.</p>"},{"location":"efeitos_colaterais/#exemplo-de-dependencias-no-useeffect","title":"Exemplo de Depend\u00eancias no <code>useEffect</code>","text":"<pre><code>import React, { useState, useEffect } from 'react';\n\nfunction ExampleComponent({ someProp }) {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =&gt; {\n    document.title = `You clicked ${count} times`;\n  }, [count]); // S\u00f3 executa o efeito quando `count` muda\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;You clicked {count} times&lt;/p&gt;\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;\n        Click me\n      &lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"efeitos_colaterais/#limpando-efeitos-colaterais","title":"Limpando Efeitos Colaterais","text":"<p>Alguns efeitos precisam ser limpos para evitar vazamentos de mem\u00f3ria. Para isso, <code>useEffect</code> pode retornar uma fun\u00e7\u00e3o de limpeza.</p>"},{"location":"efeitos_colaterais/#exemplo-de-limpeza-de-efeitos-colaterais","title":"Exemplo de Limpeza de Efeitos Colaterais","text":"<pre><code>import React, { useState, useEffect } from 'react';\n\nfunction TimerComponent() {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() =&gt; {\n    const interval = setInterval(() =&gt; {\n      setSeconds(s =&gt; s + 1);\n    }, 1000);\n\n    // Fun\u00e7\u00e3o de limpeza\n    return () =&gt; clearInterval(interval);\n  }, []); // Array vazio significa que este efeito s\u00f3 executa uma vez (componentDidMount)\n\n  return &lt;div&gt;Seconds: {seconds}&lt;/div&gt;;\n}\n</code></pre>"},{"location":"estado_ciclo_de_vida/","title":"Estado e Ciclo de Vida dos Componentes","text":""},{"location":"estado_ciclo_de_vida/#estado","title":"Estado","text":"<p>O estado \u00e9 uma estrutura de dados que pode mudar ao longo do tempo. Diferente das props, o estado \u00e9 privado e totalmente controlado pelo componente.</p>"},{"location":"estado_ciclo_de_vida/#usando-estado-em-componentes-funcionais","title":"Usando Estado em Componentes Funcionais","text":"<p>Com a introdu\u00e7\u00e3o dos Hooks no React 16.8, \u00e9 poss\u00edvel usar o estado em componentes funcionais com o hook <code>useState</code>.</p>"},{"location":"estado_ciclo_de_vida/#exemplo-de-uso-de-usestate","title":"Exemplo de Uso de <code>useState</code>","text":"<pre><code>import React, { useState } from 'react';\n\nfunction Counter() {\n  // Declara uma nova vari\u00e1vel de state, que chamaremos de \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;You clicked {count} times&lt;/p&gt;\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;\n        Click me\n      &lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default Counter;\n</code></pre>"},{"location":"estado_ciclo_de_vida/#usando-estado-em-componentes-de-classe","title":"Usando Estado em Componentes de Classe","text":"<p>Nos componentes de classe, o estado \u00e9 geralmente inicializado no construtor e atualizado usando o m\u00e9todo <code>setState</code>.</p>"},{"location":"estado_ciclo_de_vida/#exemplo-de-uso-de-estado-em-componente-de-classe","title":"Exemplo de Uso de Estado em Componente de Classe","text":"<pre><code>import React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;p&gt;You clicked {this.state.count} times&lt;/p&gt;\n        &lt;button onClick={() =&gt; this.setState({ count: this.state.count + 1 })}&gt;\n          Click me\n        &lt;/button&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Counter;\n</code></pre>"},{"location":"estado_ciclo_de_vida/#ciclo-de-vida-dos-componentes","title":"Ciclo de Vida dos Componentes","text":"<p>Os m\u00e9todos de ciclo de vida s\u00e3o divididos em tr\u00eas categorias: montagem, atualiza\u00e7\u00e3o e desmontagem.</p>"},{"location":"estado_ciclo_de_vida/#montagem","title":"Montagem","text":"<ul> <li><code>constructor()</code>: Chamado quando o componente \u00e9 inicializado.</li> <li><code>componentDidMount()</code>: Chamado ap\u00f3s o componente ser montado no DOM.</li> </ul>"},{"location":"estado_ciclo_de_vida/#exemplo-de-componentdidmount","title":"Exemplo de <code>componentDidMount</code>","text":"<pre><code>import React, { Component } from 'react';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 0 };\n  }\n\n  tick() {\n    this.setState(state =&gt; ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() =&gt; this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      &lt;div&gt;\n        Seconds: {this.state.seconds}\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Timer;\n</code></pre>"},{"location":"estado_ciclo_de_vida/#atualizacao","title":"Atualiza\u00e7\u00e3o","text":"<ul> <li><code>componentDidUpdate(prevProps, prevState)</code>: Chamado ap\u00f3s uma atualiza\u00e7\u00e3o no componente.</li> </ul>"},{"location":"estado_ciclo_de_vida/#exemplo-de-componentdidupdate","title":"Exemplo de <code>componentDidUpdate</code>","text":"<pre><code>import React, { Component } from 'react';\n\nclass UpdateExample extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      console.log('Value updated:', this.props.value);\n    }\n  }\n\n  render() {\n    return &lt;div&gt;{this.props.value}&lt;/div&gt;;\n  }\n}\n\nexport default UpdateExample;\n</code></pre>"},{"location":"estado_ciclo_de_vida/#desmontagem","title":"Desmontagem","text":"<ul> <li><code>componentWillUnmount()</code>: Chamado imediatamente antes de um componente ser desmontado e destru\u00eddo.</li> </ul>"},{"location":"estado_ciclo_de_vida/#exemplo-de-componentwillunmount","title":"Exemplo de <code>componentWillUnmount</code>","text":"<pre><code>import React, { Component } from 'react';\n\nclass Example extends Component {\n  componentWillUnmount() {\n    console.log('Component will unmount');\n  }\n\n  render() {\n    return &lt;div&gt;Example Component&lt;/div&gt;;\n  }\n}\n\nexport default Example;\n</code></pre>"},{"location":"formularios/","title":"Formul\u00e1rios","text":""},{"location":"formularios/#manipulacao-de-formularios","title":"Manipula\u00e7\u00e3o de Formul\u00e1rios","text":"<p>Manipular formul\u00e1rios em React \u00e9 direto, mas pode exigir um pouco mais de c\u00f3digo do que em bibliotecas tradicionais. A principal diferen\u00e7a \u00e9 que voc\u00ea precisa gerenciar o estado dos elementos do formul\u00e1rio manualmente.</p>"},{"location":"formularios/#exemplo-basico-de-formulario","title":"Exemplo B\u00e1sico de Formul\u00e1rio","text":"<p>Aqui est\u00e1 um exemplo b\u00e1sico de um formul\u00e1rio de entrada de texto em React:</p> <pre><code>import React, { useState } from 'react';\n\nfunction SimpleForm() {\n  const [name, setName] = useState('');\n\n  const handleChange = (event) =&gt; {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event) =&gt; {\n    event.preventDefault();\n    alert(`A name was submitted: ${name}`);\n  };\n\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;label&gt;\n        Name:\n        &lt;input type=\"text\" value={name} onChange={handleChange} /&gt;\n      &lt;/label&gt;\n      &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n    &lt;/form&gt;\n  );\n}\n\nexport default SimpleForm;\n</code></pre> <p>Neste exemplo, o valor do input \u00e9 controlado pelo estado do componente e atualizado via o manipulador de eventos <code>handleChange</code>.</p>"},{"location":"formularios/#manipulacao-de-varios-inputs","title":"Manipula\u00e7\u00e3o de V\u00e1rios Inputs","text":"<p>Voc\u00ea pode manipular v\u00e1rios inputs adicionando o estado correspondente para cada input no componente.</p>"},{"location":"formularios/#exemplo-de-formulario-com-varios-inputs","title":"Exemplo de Formul\u00e1rio com V\u00e1rios Inputs","text":"<pre><code>import React, { useState } from 'react';\n\nfunction MultiInputForm() {\n  const [inputs, setInputs] = useState({ username: '', email: '' });\n\n  const handleChange = (event) =&gt; {\n    const { name, value } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const handleSubmit = (event) =&gt; {\n    event.preventDefault();\n    alert(`Username: ${inputs.username}, Email: ${inputs.email}`);\n  };\n\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;label&gt;\n        Username:\n        &lt;input type=\"text\" name=\"username\" value={inputs.username} onChange={handleChange} /&gt;\n      &lt;/label&gt;\n      &lt;br /&gt;\n      &lt;label&gt;\n        Email:\n        &lt;input type=\"email\" name=\"email\" value={inputs.email} onChange={handleChange} /&gt;\n      &lt;/label&gt;\n      &lt;br /&gt;\n      &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n    &lt;/form&gt;\n  );\n}\n\nexport default MultiInputForm;\n</code></pre> <p>Neste exemplo, usamos um objeto para armazenar o estado de v\u00e1rios inputs e atualizamos o estado corretamente no <code>handleChange</code>.</p>"},{"location":"formularios/#validacao-de-formularios","title":"Valida\u00e7\u00e3o de Formul\u00e1rios","text":"<p>A valida\u00e7\u00e3o de formul\u00e1rios \u00e9 essencial para garantir que os dados inseridos pelos usu\u00e1rios estejam corretos. Em React, voc\u00ea pode adicionar valida\u00e7\u00e3o usando estados e manipuladores de eventos.</p>"},{"location":"formularios/#exemplo-de-validacao-de-formularios","title":"Exemplo de Valida\u00e7\u00e3o de Formul\u00e1rios","text":"<pre><code>import React, { useState } from 'react';\n\nfunction ValidatedForm() {\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChange = (event) =&gt; {\n    setUsername(event.target.value);\n  };\n\n  const handleSubmit = (event) =&gt; {\n    event.preventDefault();\n    if (username.length &lt; 5) {\n      setError('Username must be at least 5 characters long');\n    } else {\n      setError('');\n      alert(`A username was submitted: ${username}`);\n    }\n  };\n\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;label&gt;\n        Username:\n        &lt;input type=\"text\" value={username} onChange={handleChange} /&gt;\n      &lt;/label&gt;\n      {error &amp;&amp; &lt;p style={{ color: 'red' }}&gt;{error}&lt;/p&gt;}\n      &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n    &lt;/form&gt;\n  );\n}\n\nexport default ValidatedForm;\n</code></pre> <p>Neste exemplo, a valida\u00e7\u00e3o \u00e9 feita no <code>handleSubmit</code>, e uma mensagem de erro \u00e9 exibida se a valida\u00e7\u00e3o falhar.</p>"},{"location":"gerenciamento_dados/","title":"Gerenciamento de Dados","text":""},{"location":"gerenciamento_dados/#fetch-api-e-axios","title":"Fetch API e Axios","text":"<p>Para buscar dados de uma API externa, voc\u00ea pode usar a Fetch API ou Axios. Ambos s\u00e3o populares e amplamente usados para fazer solicita\u00e7\u00f5es HTTP em JavaScript.</p>"},{"location":"gerenciamento_dados/#fetch-api","title":"Fetch API","text":"<p>A Fetch API \u00e9 uma interface nativa do JavaScript para fazer requisi\u00e7\u00f5es HTTP. Aqui est\u00e1 um exemplo de como usar a Fetch API em um componente React:</p> <pre><code>import React, { useState, useEffect } from 'react';\n\nfunction FetchData() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() =&gt; {\n    fetch('https://api.example.com/data')\n      .then(response =&gt; response.json())\n      .then(data =&gt; {\n        setData(data);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return &lt;div&gt;Loading...&lt;/div&gt;;\n  }\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Data from API:&lt;/h1&gt;\n      &lt;pre&gt;{JSON.stringify(data, null, 2)}&lt;/pre&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default FetchData;\n</code></pre>"},{"location":"gerenciamento_dados/#axios","title":"Axios","text":"<p>Axios \u00e9 uma biblioteca baseada em Promises para fazer requisi\u00e7\u00f5es HTTP. Ela oferece uma sintaxe mais simples e mais funcionalidades do que a Fetch API. Primeiro, voc\u00ea precisa instalar o Axios:</p> <pre><code>npm install axios\n</code></pre> <p>Aqui est\u00e1 um exemplo de como usar o Axios em um componente React:</p> <pre><code>import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction FetchData() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() =&gt; {\n    axios.get('https://api.example.com/data')\n      .then(response =&gt; {\n        setData(response.data);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return &lt;div&gt;Loading...&lt;/div&gt;;\n  }\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Data from API:&lt;/h1&gt;\n      &lt;pre&gt;{JSON.stringify(data, null, 2)}&lt;/pre&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default FetchData;\n</code></pre>"},{"location":"gerenciamento_dados/#consumindo-apis-rest","title":"Consumindo APIs REST","text":"<p>Consumir APIs REST em React \u00e9 uma pr\u00e1tica comum, especialmente ao construir aplica\u00e7\u00f5es que dependem de dados externos.</p>"},{"location":"gerenciamento_dados/#exemplo-de-consumo-de-api-rest","title":"Exemplo de Consumo de API REST","text":"<p>Neste exemplo, vamos consumir uma API REST que retorna uma lista de usu\u00e1rios:</p> <pre><code>import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UsersList() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() =&gt; {\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then(response =&gt; {\n        setUsers(response.data);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return &lt;div&gt;Loading...&lt;/div&gt;;\n  }\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Users List&lt;/h1&gt;\n      &lt;ul&gt;\n        {users.map(user =&gt; (\n          &lt;li key={user.id}&gt;{user.name}&lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default UsersList;\n</code></pre> <p>Neste exemplo, usamos a API JSONPlaceholder, uma API REST p\u00fablica que fornece dados fict\u00edcios para testes e prototipagem. A lista de usu\u00e1rios \u00e9 renderizada em um <code>&lt;ul&gt;</code> com cada usu\u00e1rio representado por um <code>&lt;li&gt;</code>.</p>"},{"location":"introducao/","title":"Introdu\u00e7\u00e3o ao React","text":""},{"location":"introducao/#o-que-e-react","title":"O que \u00e9 React?","text":"<p>React \u00e9 uma biblioteca JavaScript de c\u00f3digo aberto para a constru\u00e7\u00e3o de interfaces de usu\u00e1rio, especialmente para aplica\u00e7\u00f5es de p\u00e1gina \u00fanica. \u00c9 mantida pelo Facebook e uma comunidade de desenvolvedores individuais e empresas.</p>"},{"location":"introducao/#historia-e-evolucao","title":"Hist\u00f3ria e Evolu\u00e7\u00e3o","text":"<p>React foi criado por Jordan Walke, um engenheiro de software do Facebook, em 2011. A primeira vers\u00e3o foi lan\u00e7ada em 2013. Desde ent\u00e3o, React tem evolu\u00eddo significativamente, com a adi\u00e7\u00e3o de recursos como Hooks, Context API e React Suspense.</p>"},{"location":"introducao/#por-que-usar-react","title":"Por que usar React?","text":"<ul> <li>Componentiza\u00e7\u00e3o: React permite a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis, facilitando a manuten\u00e7\u00e3o e a escalabilidade do c\u00f3digo.</li> <li>Desempenho: O Virtual DOM de React melhora o desempenho ao minimizar atualiza\u00e7\u00f5es diretas no DOM real.</li> <li>Ecosistema: React possui um ecossistema rico com muitas bibliotecas e ferramentas que facilitam o desenvolvimento.</li> </ul>"},{"location":"introducao/#codigo-de-exemplo","title":"C\u00f3digo de Exemplo","text":"<p>Aqui est\u00e1 um exemplo simples de um componente React:</p> <pre><code>import React from 'react';\nfunction Welcome(props) {\nreturn &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;\n}\nexport default Welcome;\n</code></pre> <p>Este componente recebe uma propriedade (props.name) e exibe uma sauda\u00e7\u00e3o personalizada.</p>"},{"location":"jsx/","title":"JSX","text":""},{"location":"jsx/#o-que-e-jsx","title":"O que \u00e9 JSX?","text":"<p>JSX \u00e9 uma extens\u00e3o de sintaxe para JavaScript que permite escrever HTML diretamente dentro do c\u00f3digo JavaScript. \u00c9 utilizado com o React para descrever a interface do usu\u00e1rio.</p>"},{"location":"jsx/#exemplo-de-jsx","title":"Exemplo de JSX","text":"<pre><code>const element = &lt;h1&gt;Hello, world!&lt;/h1&gt;;\n</code></pre>"},{"location":"jsx/#sintaxe-basica","title":"Sintaxe B\u00e1sica","text":"<p>JSX permite misturar HTML com JavaScript. Qualquer express\u00e3o JavaScript v\u00e1lida pode ser inclu\u00edda dentro de chaves {}.</p>"},{"location":"jsx/#exemplo-de-sintaxe-basica","title":"Exemplo de Sintaxe B\u00e1sica","text":"<pre><code>const name = 'Sara';\nconst element = &lt;h1&gt;Hello, {name}&lt;/h1&gt;;\n</code></pre> <p>No exemplo acima, a vari\u00e1vel name \u00e9 inserida dentro da tag <code>&lt;h1&gt;</code> usando chaves {}.</p>"},{"location":"jsx/#inserindo-expressoes-em-jsx","title":"Inserindo Express\u00f5es em JSX","text":"<p>Voc\u00ea pode inserir qualquer express\u00e3o JavaScript v\u00e1lida dentro das chaves em JSX. Isso inclui opera\u00e7\u00f5es matem\u00e1ticas, chamadas de fun\u00e7\u00f5es, e mais.</p>"},{"location":"jsx/#exemplo-de-expressoes-em-jsx","title":"Exemplo de Express\u00f5es em JSX","text":"<pre><code>function formatName(user) {\nreturn user.firstName + ' ' + user.lastName;\n}\nconst user = {\nfirstName: 'Harper',\nlastName: 'Perez'\n};\nconst element = (\n&lt;h1&gt;\nHello, {formatName(user)}!\n&lt;/h1&gt;\n);\n</code></pre>"},{"location":"jsx/#atributos-em-jsx","title":"Atributos em JSX","text":"<p>Voc\u00ea pode usar aspas para especificar valores de string e chaves para express\u00f5es JavaScript em atributos.</p>"},{"location":"jsx/#exemplo-de-atributos","title":"Exemplo de Atributos","text":"<pre><code>const element = &lt;img src={user.avatarUrl} alt=\"User Avatar\" /&gt;;\n</code></pre>"},{"location":"jsx/#filhos-em-jsx","title":"Filhos em JSX","text":"<p>Se um elemento JSX tiver filhos, voc\u00ea pode colocar esses filhos dentro da tag de abertura e fechamento.</p>"},{"location":"jsx/#exemplo-de-filhos","title":"Exemplo de Filhos","text":"<pre><code>const element = (\n&lt;div&gt;\n&lt;h1&gt;Hello!&lt;/h1&gt;\n&lt;h2&gt;Good to see you here.&lt;/h2&gt;\n&lt;/div&gt;\n);\n</code></pre>"},{"location":"jsx/#jsx-e-reactcreateelement","title":"JSX e React.createElement()","text":"<p>JSX \u00e9 uma sintaxe a\u00e7ucarada para React.createElement(). O c\u00f3digo JSX:</p> <pre><code>const element = &lt;h1 className=\"greeting\"&gt;Hello, world!&lt;/h1&gt;;\n</code></pre> <p>\u00c9 compilado para:</p> <pre><code>const element = React.createElement(\n'h1',\n{className: 'greeting'},\n'Hello, world!'\n);\n</code></pre> <p>React.createElement() cria um objeto como este:</p> <pre><code>const element = {\ntype: 'h1',\nprops: {\nclassName: 'greeting',\nchildren: 'Hello, world!'\n}\n};\n</code></pre>"},{"location":"recursos_adicionais/","title":"Recursos Adicionais","text":""},{"location":"recursos_adicionais/#bibliotecas-e-ferramentas-populares","title":"Bibliotecas e Ferramentas Populares","text":"<p>React possui um ecossistema robusto com muitas bibliotecas e ferramentas \u00fateis para aprimorar o desenvolvimento.</p>"},{"location":"recursos_adicionais/#redux","title":"Redux","text":"<p>Redux \u00e9 uma biblioteca para gerenciamento de estado previs\u00edvel em aplica\u00e7\u00f5es JavaScript. \u00c9 frequentemente usado com React para gerenciar estados complexos.</p>"},{"location":"recursos_adicionais/#instalacao","title":"Instala\u00e7\u00e3o","text":"<pre><code>npm install redux react-redux\n</code></pre>"},{"location":"recursos_adicionais/#exemplo-basico","title":"Exemplo B\u00e1sico","text":"<pre><code>import { createStore } from 'redux';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\n\n// A\u00e7\u00e3o\nconst increment = () =&gt; ({ type: 'INCREMENT' });\n\n// Redutor\nconst counter = (state = 0, action) =&gt; {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    default:\n      return state;\n  }\n};\n\n// Store\nconst store = createStore(counter);\n\nfunction Counter() {\n  const count = useSelector(state =&gt; state);\n  const dispatch = useDispatch();\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;{count}&lt;/p&gt;\n      &lt;button onClick={() =&gt; dispatch(increment())}&gt;Increment&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n\nfunction App() {\n  return (\n    &lt;Provider store={store}&gt;\n      &lt;Counter /&gt;\n    &lt;/Provider&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"recursos_adicionais/#react-query","title":"React Query","text":"<p>React Query \u00e9 uma biblioteca poderosa para buscar, armazenar em cache e atualizar dados no front-end.</p>"},{"location":"recursos_adicionais/#instalacao_1","title":"Instala\u00e7\u00e3o","text":"<pre><code>npm install react-query\n</code></pre>"},{"location":"recursos_adicionais/#exemplo-basico_1","title":"Exemplo B\u00e1sico","text":"<pre><code>import React from 'react';\nimport { useQuery, QueryClient, QueryClientProvider } from 'react-query';\nimport axios from 'axios';\n\nconst queryClient = new QueryClient();\n\nfunction fetchUser() {\n  return axios.get('https://jsonplaceholder.typicode.com/users/1').then(res =&gt; res.data);\n}\n\nfunction User() {\n  const { data, error, isLoading } = useQuery('user', fetchUser);\n\n  if (isLoading) return 'Loading...';\n  if (error) return 'An error occurred';\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;{data.name}&lt;/h1&gt;\n      &lt;p&gt;{data.email}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n}\n\nfunction App() {\n  return (\n    &lt;QueryClientProvider client={queryClient}&gt;\n      &lt;User /&gt;\n    &lt;/QueryClientProvider&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"recursos_adicionais/#comunidade-e-suporte","title":"Comunidade e Suporte","text":""},{"location":"recursos_adicionais/#documentacao-oficial","title":"Documenta\u00e7\u00e3o Oficial","text":"<p>A documenta\u00e7\u00e3o oficial do React \u00e9 um recurso essencial para aprender e resolver problemas. Voc\u00ea pode acess\u00e1-la em React Documentation.</p>"},{"location":"recursos_adicionais/#foruns-e-comunidades","title":"F\u00f3runs e Comunidades","text":"<p>Participar de f\u00f3runs e comunidades pode ser extremamente \u00fatil para resolver problemas e aprender novas pr\u00e1ticas. Alguns dos principais recursos incluem:</p> <ul> <li>Stack Overflow</li> <li>Reactiflux Discord Community</li> <li>Reddit - r/reactjs</li> </ul>"},{"location":"recursos_adicionais/#cursos-e-tutoriais","title":"Cursos e Tutoriais","text":"<p>Existem muitos cursos e tutoriais online que podem ajudar a aprofundar seus conhecimentos em React:</p> <ul> <li>freeCodeCamp</li> <li>Egghead.io</li> <li>Codecademy</li> </ul>"},{"location":"roteamento/","title":"Roteamento","text":""},{"location":"roteamento/#react-router","title":"React Router","text":"<p>O React Router \u00e9 a biblioteca padr\u00e3o para roteamento em aplica\u00e7\u00f5es React. Ele permite a navega\u00e7\u00e3o entre diferentes componentes, alterando a URL e mantendo a interface do usu\u00e1rio sincronizada com o estado da aplica\u00e7\u00e3o.</p>"},{"location":"roteamento/#configuracao-basica","title":"Configura\u00e7\u00e3o B\u00e1sica","text":"<p>Para come\u00e7ar a usar o React Router, voc\u00ea precisa instal\u00e1-lo e configurar o roteamento b\u00e1sico na sua aplica\u00e7\u00e3o.</p>"},{"location":"roteamento/#instalando-o-react-router","title":"Instalando o React Router","text":"<p>Primeiro, instale o React Router com npm ou yarn:</p> <pre><code>npm install react-router-dom\n</code></pre>"},{"location":"roteamento/#configuracao-basica-do-react-router","title":"Configura\u00e7\u00e3o B\u00e1sica do React Router","text":"<p>Aqui est\u00e1 um exemplo b\u00e1sico de como configurar o React Router em uma aplica\u00e7\u00e3o React:</p> <pre><code>import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction Home() {\n  return &lt;h2&gt;Home&lt;/h2&gt;;\n}\n\nfunction About() {\n  return &lt;h2&gt;About&lt;/h2&gt;;\n}\n\nfunction Users() {\n  return &lt;h2&gt;Users&lt;/h2&gt;;\n}\n\nfunction App() {\n  return (\n    &lt;Router&gt;\n      &lt;div&gt;\n        &lt;nav&gt;\n          &lt;ul&gt;\n            &lt;li&gt;\n              &lt;Link to=\"/\"&gt;Home&lt;/Link&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;Link to=\"/about\"&gt;About&lt;/Link&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;Link to=\"/users\"&gt;Users&lt;/Link&gt;\n            &lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/nav&gt;\n\n        &lt;Switch&gt;\n          &lt;Route path=\"/about\"&gt;\n            &lt;About /&gt;\n          &lt;/Route&gt;\n          &lt;Route path=\"/users\"&gt;\n            &lt;Users /&gt;\n          &lt;/Route&gt;\n          &lt;Route path=\"/\"&gt;\n            &lt;Home /&gt;\n          &lt;/Route&gt;\n        &lt;/Switch&gt;\n      &lt;/div&gt;\n    &lt;/Router&gt;\n  );\n}\n\nReactDOM.render(&lt;App /&gt;, document.getElementById('root'));\n</code></pre> <p>Neste exemplo, <code>BrowserRouter</code> \u00e9 usado para envolver a aplica\u00e7\u00e3o e fornecer a funcionalidade de roteamento. Os componentes <code>Link</code> s\u00e3o usados para navegar entre as rotas, e os componentes <code>Route</code> s\u00e3o usados para renderizar componentes espec\u00edficos com base na URL.</p>"},{"location":"roteamento/#roteamento-dinamico","title":"Roteamento Din\u00e2mico","text":"<p>O React Router tamb\u00e9m suporta roteamento din\u00e2mico, o que permite que voc\u00ea crie rotas com par\u00e2metros que podem ser extra\u00eddos e usados dentro do seu componente.</p>"},{"location":"roteamento/#exemplo-de-roteamento-dinamico","title":"Exemplo de Roteamento Din\u00e2mico","text":"<pre><code>import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, useParams } from 'react-router-dom';\n\nfunction User() {\n  let { id } = useParams();\n  return &lt;h2&gt;User ID: {id}&lt;/h2&gt;;\n}\n\nfunction App() {\n  return (\n    &lt;Router&gt;\n      &lt;div&gt;\n        &lt;nav&gt;\n          &lt;ul&gt;\n            &lt;li&gt;\n              &lt;Link to=\"/user/1\"&gt;User 1&lt;/Link&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;Link to=\"/user/2\"&gt;User 2&lt;/Link&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;Link to=\"/user/3\"&gt;User 3&lt;/Link&gt;\n            &lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/nav&gt;\n\n        &lt;Switch&gt;\n          &lt;Route path=\"/user/:id\"&gt;\n            &lt;User /&gt;\n          &lt;/Route&gt;\n          &lt;Route path=\"/\"&gt;\n            &lt;Home /&gt;\n          &lt;/Route&gt;\n        &lt;/Switch&gt;\n      &lt;/div&gt;\n    &lt;/Router&gt;\n  );\n}\n\nfunction Home() {\n  return &lt;h2&gt;Home&lt;/h2&gt;;\n}\n\nexport default App;\n</code></pre> <p>Neste exemplo, a rota <code>/user/:id</code> \u00e9 definida com um par\u00e2metro din\u00e2mico <code>:id</code>. O hook <code>useParams</code> \u00e9 usado dentro do componente <code>User</code> para acessar o valor do par\u00e2metro da URL.</p>"}]}